# -*- mode: autoconf; autoconf-indentation: 4; -*-
#
# emre configure.in by Frank Kuehnel <kuehnelf@google.com>
# mostly based on RProtoBuf configure.in by Dirk Eddelbuettel <edd@debian.org>
#
# $Id$ require at least autoconf 2.61

# require at least autoconf 2.61
AC_PREREQ(2.61)

# Process this file with autoconf to produce a configure script.
AC_INIT([emre],[1.0.0])

## simpler alternative to test below:  AC_PATH_PROG(PROTOC, protoc)

AC_DEFUN([AC_PROG_PKGCONFIG], [AC_CHECK_PROG(PKGCONFIG,pkg-config,yes)])
AC_PROG_PKGCONFIG

## use pkg-config for ProtoBuf and gsl settings
##
if test x"${PKGCONFIG}" == x"yes"; then
  if pkg-config --exists protobuf; then
    protobuf_cxxflags=`pkg-config --cflags protobuf`
    protobuf_libs=`pkg-config --libs protobuf`
  else
    protobuf_cxxflags=""
    protobuf_libs="-lprotobuf"
  fi
else
  # Add a reasonable default of -lprotobuf if we don't have pkg-config
  protobuf_cxxflags=""
  protobuf_libs="-lprotobuf"
fi

## And make sure these flags are used for the tests below.
CPPFLAGS="${protobuf_cxxflags} ${CPPFLAGS}"
CXXFLAGS="${protobuf_cxxflags} ${CXXFLAGS}"

## Check for non-standard programs: gsl-config(1)
AC_PATH_PROG([GSL_CONFIG], [gsl-config])
## If gsl-config was found, letâ€™s use it
if test "${GSL_CONFIG}" != ""; then
  # Use gsl-config for header and linker arguments (without BLAS which we get from R)
  gsl_cflags=`${GSL_CONFIG} --cflags`
  gsl_libs=`${GSL_CONFIG} --libs-without-cblas`
else
  AC_MSG_ERROR([gsl-config not found, is GSL installed?])
fi

# Now substitute these variables in src/Makevars.in to create src/Makevars
AC_SUBST([PKG_CPPFLAGS],["${PKG_CPPFLAGS} ${CXXFLAGS} $protobuf_cxxflags"])
AC_SUBST([PKG_LIBS],["${PKG_LIBS} $gsl_libs $protobuf_libs"])
AC_CONFIG_FILES([src/Makevars])
AC_OUTPUT
echo "Completed configuration and ready to build."
